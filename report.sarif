{"$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json", "version": "2.1.0", "runs": [{"tool": {"driver": {"name": "Betterscan", "informationUri": "https://betterscan.io", "semanticVersion": "0.9.9", "rules": [{"id": "0", "name": "BetterscanRule", "shortDescription": {"text": "Highentropy"}, "fullDescription": {"text": "Highentropy"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Highentropy", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "1", "name": "BetterscanRule", "shortDescription": {"text": "GenericAPIKey"}, "fullDescription": {"text": "GenericAPIKey"}, "helpUri": "https://betterscan.io", "help": {"markdown": "GenericAPIKey", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "2", "name": "BetterscanRule", "shortDescription": {"text": "User controlled data in eval() or similar functions may result in Server Side Injection or Remote Code Injection"}, "fullDescription": {"text": "User controlled data in eval() or similar functions may result in Server Side Injection or Remote Code Injection"}, "helpUri": "https://betterscan.io", "help": {"markdown": "User controlled data in eval() or similar functions may result in Server Side Injection or Remote Code Injection", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "3", "name": "BetterscanRule", "shortDescription": {"text": "Error messages with stack traces may expose sensitive information about the application."}, "fullDescription": {"text": "Error messages with stack traces may expose sensitive information about the application."}, "helpUri": "https://betterscan.io", "help": {"markdown": "Error messages with stack traces may expose sensitive information about the application.", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "4", "name": "BetterscanRule", "shortDescription": {"text": "String comparisons using '===', '!==', '!=' and '==' is vulnerable to timing attacks. More info: https://snyk.io/blog/node-js-timing-attack-ccc-ctf/"}, "fullDescription": {"text": "String comparisons using '===', '!==', '!=' and '==' is vulnerable to timing attacks. More info: https://snyk.io/blog/node-js-timing-attack-ccc-ctf/"}, "helpUri": "https://betterscan.io", "help": {"markdown": "String comparisons using '===', '!==', '!=' and '==' is vulnerable to timing attacks. More info: https://snyk.io/blog/node-js-timing-attack-ccc-ctf/", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "5", "name": "BetterscanRule", "shortDescription": {"text": "The use of a predictable random value can lead to vulnerabilities when\nused in certain security critical contexts. A quick fix could be to replace\nthe use of java.util.Random with something stronger, such as java.security.SecureRandom.\n"}, "fullDescription": {"text": "The use of a predictable random value can lead to vulnerabilities when\nused in certain security critical contexts. A quick fix could be to replace\nthe use of java.util.Random with something stronger, such as java.security.SecureRandom.\n"}, "helpUri": "https://betterscan.io", "help": {"markdown": "The use of a predictable random value can lead to vulnerabilities when\nused in certain security critical contexts. A quick fix could be to replace\nthe use of java.util.Random with something stronger, such as java.security.SecureRandom.\n", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "6", "name": "BetterscanRule", "shortDescription": {"text": "DES is considered strong ciphers for modern applications. Currently, NIST recommends the usage\nof AES block ciphers instead of DES.\n"}, "fullDescription": {"text": "DES is considered strong ciphers for modern applications. Currently, NIST recommends the usage\nof AES block ciphers instead of DES.\n"}, "helpUri": "https://betterscan.io", "help": {"markdown": "DES is considered strong ciphers for modern applications. Currently, NIST recommends the usage\nof AES block ciphers instead of DES.\n", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "7", "name": "BetterscanRule", "shortDescription": {"text": "Cryptographic keys should not be kept in the source code. The source code can be widely shared\nin an enterprise environment, and is certainly shared in open source. To be managed safely,\npasswords and secret keys should be stored in separate configuration files or keystores.\n"}, "fullDescription": {"text": "Cryptographic keys should not be kept in the source code. The source code can be widely shared\nin an enterprise environment, and is certainly shared in open source. To be managed safely,\npasswords and secret keys should be stored in separate configuration files or keystores.\n"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Cryptographic keys should not be kept in the source code. The source code can be widely shared\nin an enterprise environment, and is certainly shared in open source. To be managed safely,\npasswords and secret keys should be stored in separate configuration files or keystores.\n", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "8", "name": "BetterscanRule", "shortDescription": {"text": "A trust boundary can be thought of as line drawn through a program. On one side\nof the line, data is untrusted. On the other side of the line, data is assumed\nto be trustworthy. The purpose of validation logic is to allow data to safely\ncross the trust boundary - to move from untrusted to trusted. A trust boundary\nviolation occurs when a program blurs the line between what is trusted and what\nis untrusted. By combining trusted and untrusted data in the same data\nstructure, it becomes easier for programmers to mistakenly trust unvalidated\ndata.\n"}, "fullDescription": {"text": "A trust boundary can be thought of as line drawn through a program. On one side\nof the line, data is untrusted. On the other side of the line, data is assumed\nto be trustworthy. The purpose of validation logic is to allow data to safely\ncross the trust boundary - to move from untrusted to trusted. A trust boundary\nviolation occurs when a program blurs the line between what is trusted and what\nis untrusted. By combining trusted and untrusted data in the same data\nstructure, it becomes easier for programmers to mistakenly trust unvalidated\ndata.\n"}, "helpUri": "https://betterscan.io", "help": {"markdown": "A trust boundary can be thought of as line drawn through a program. On one side\nof the line, data is untrusted. On the other side of the line, data is assumed\nto be trustworthy. The purpose of validation logic is to allow data to safely\ncross the trust boundary - to move from untrusted to trusted. A trust boundary\nviolation occurs when a program blurs the line between what is trusted and what\nis untrusted. By combining trusted and untrusted data in the same data\nstructure, it becomes easier for programmers to mistakenly trust unvalidated\ndata.\n", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "9", "name": "BetterscanRule", "shortDescription": {"text": "Cryptographic keys should not be kept in the source code. The source code can be widely shared\nin an enterprise environment, and is certainly shared in open source. To be managed safely,\npasswords and secret keys should be stored in separate configuration files or keystores.\n"}, "fullDescription": {"text": "Cryptographic keys should not be kept in the source code. The source code can be widely shared\nin an enterprise environment, and is certainly shared in open source. To be managed safely,\npasswords and secret keys should be stored in separate configuration files or keystores.\n"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Cryptographic keys should not be kept in the source code. The source code can be widely shared\nin an enterprise environment, and is certainly shared in open source. To be managed safely,\npasswords and secret keys should be stored in separate configuration files or keystores.\n", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "10", "name": "BetterscanRule", "shortDescription": {"text": "Cryptographic keys should not be kept in the source code. The source code can be widely shared\nin an enterprise environment, and is certainly shared in open source. To be managed safely,\npasswords and secret keys should be stored in separate configuration files or keystores.\n"}, "fullDescription": {"text": "Cryptographic keys should not be kept in the source code. The source code can be widely shared\nin an enterprise environment, and is certainly shared in open source. To be managed safely,\npasswords and secret keys should be stored in separate configuration files or keystores.\n"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Cryptographic keys should not be kept in the source code. The source code can be widely shared\nin an enterprise environment, and is certainly shared in open source. To be managed safely,\npasswords and secret keys should be stored in separate configuration files or keystores.\n", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "11", "name": "BetterscanRule", "shortDescription": {"text": "The method identified is susceptible to injection. The input should be validated and properly\nescaped.\n"}, "fullDescription": {"text": "The method identified is susceptible to injection. The input should be validated and properly\nescaped.\n"}, "helpUri": "https://betterscan.io", "help": {"markdown": "The method identified is susceptible to injection. The input should be validated and properly\nescaped.\n", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "12", "name": "BetterscanRule", "shortDescription": {"text": "\"The software uses an HTTP request parameter to construct a pathname that should be within a\nrestricted directory, but it does not properly neutralize absolute path sequences such as\n\"/abs/path\" that can resolve to a location that is outside of that directory. See\nhttp://cwe.mitre.org/data/definitions/36.html for more information.\"\n"}, "fullDescription": {"text": "\"The software uses an HTTP request parameter to construct a pathname that should be within a\nrestricted directory, but it does not properly neutralize absolute path sequences such as\n\"/abs/path\" that can resolve to a location that is outside of that directory. See\nhttp://cwe.mitre.org/data/definitions/36.html for more information.\"\n"}, "helpUri": "https://betterscan.io", "help": {"markdown": "\"The software uses an HTTP request parameter to construct a pathname that should be within a\nrestricted directory, but it does not properly neutralize absolute path sequences such as\n\"/abs/path\" that can resolve to a location that is outside of that directory. See\nhttp://cwe.mitre.org/data/definitions/36.html for more information.\"\n", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "13", "name": "BetterscanRule", "shortDescription": {"text": "Server-Side Request Forgery occur when a web server executes a request to a\nuser supplied destination parameter that is not validated. Such vulnerabilities\ncould allow an attacker to access internal services or to launch attacks from\nyour web server.\n"}, "fullDescription": {"text": "Server-Side Request Forgery occur when a web server executes a request to a\nuser supplied destination parameter that is not validated. Such vulnerabilities\ncould allow an attacker to access internal services or to launch attacks from\nyour web server.\n"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Server-Side Request Forgery occur when a web server executes a request to a\nuser supplied destination parameter that is not validated. Such vulnerabilities\ncould allow an attacker to access internal services or to launch attacks from\nyour web server.\n", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "14", "name": "BetterscanRule", "shortDescription": {"text": "Passwords should not be kept in the source code. The source code can be widely shared in an\nenterprise environment, and is certainly shared in open source. To be managed safely, passwords\nand secret keys should be stored in separate configuration files or keystores.\n"}, "fullDescription": {"text": "Passwords should not be kept in the source code. The source code can be widely shared in an\nenterprise environment, and is certainly shared in open source. To be managed safely, passwords\nand secret keys should be stored in separate configuration files or keystores.\n"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Passwords should not be kept in the source code. The source code can be widely shared in an\nenterprise environment, and is certainly shared in open source. To be managed safely, passwords\nand secret keys should be stored in separate configuration files or keystores.\n", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "15", "name": "BetterscanRule", "shortDescription": {"text": "\"Storing sensitive data in a persistent cookie for an extended period can lead to a breach of\nconfidentiality or account compromise.\"\n"}, "fullDescription": {"text": "\"Storing sensitive data in a persistent cookie for an extended period can lead to a breach of\nconfidentiality or account compromise.\"\n"}, "helpUri": "https://betterscan.io", "help": {"markdown": "\"Storing sensitive data in a persistent cookie for an extended period can lead to a breach of\nconfidentiality or account compromise.\"\n", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "16", "name": "BetterscanRule", "shortDescription": {"text": "The Servlet can read GET and POST parameters from various methods. The value obtained should be\nconsidered unsafe. You may need to validate or sanitize those values before passing them to\nsensitive APIs\n"}, "fullDescription": {"text": "The Servlet can read GET and POST parameters from various methods. The value obtained should be\nconsidered unsafe. You may need to validate or sanitize those values before passing them to\nsensitive APIs\n"}, "helpUri": "https://betterscan.io", "help": {"markdown": "The Servlet can read GET and POST parameters from various methods. The value obtained should be\nconsidered unsafe. You may need to validate or sanitize those values before passing them to\nsensitive APIs\n", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "17", "name": "BetterscanRule", "shortDescription": {"text": "Cryptographic keys should not be kept in the source code. The source code can be widely shared\nin an enterprise environment, and is certainly shared in open source. To be managed safely,\npasswords and secret keys should be stored in separate configuration files or keystores.\n"}, "fullDescription": {"text": "Cryptographic keys should not be kept in the source code. The source code can be widely shared\nin an enterprise environment, and is certainly shared in open source. To be managed safely,\npasswords and secret keys should be stored in separate configuration files or keystores.\n"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Cryptographic keys should not be kept in the source code. The source code can be widely shared\nin an enterprise environment, and is certainly shared in open source. To be managed safely,\npasswords and secret keys should be stored in separate configuration files or keystores.\n", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "18", "name": "BetterscanRule", "shortDescription": {"text": "The sensitive information may be valuable information on its own (such as a password), or it\nmay be useful for launching other, more deadly attacks. If an attack fails, an attacker may use\nerror information provided by the server to launch another more focused attack. For example, an\nattempt to exploit a path traversal weakness (CWE-22) might yield the full pathname of the\ninstalled application.\n"}, "fullDescription": {"text": "The sensitive information may be valuable information on its own (such as a password), or it\nmay be useful for launching other, more deadly attacks. If an attack fails, an attacker may use\nerror information provided by the server to launch another more focused attack. For example, an\nattempt to exploit a path traversal weakness (CWE-22) might yield the full pathname of the\ninstalled application.\n"}, "helpUri": "https://betterscan.io", "help": {"markdown": "The sensitive information may be valuable information on its own (such as a password), or it\nmay be useful for launching other, more deadly attacks. If an attack fails, an attacker may use\nerror information provided by the server to launch another more focused attack. For example, an\nattempt to exploit a path traversal weakness (CWE-22) might yield the full pathname of the\ninstalled application.\n", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "19", "name": "BetterscanRule", "shortDescription": {"text": "The method identified is susceptible to injection. The input should be validated and properly\nescaped.\n"}, "fullDescription": {"text": "The method identified is susceptible to injection. The input should be validated and properly\nescaped.\n"}, "helpUri": "https://betterscan.io", "help": {"markdown": "The method identified is susceptible to injection. The input should be validated and properly\nescaped.\n", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "20", "name": "BetterscanRule", "shortDescription": {"text": "RegExp() called with a variable, this might allow an attacker to DOS your application with a long-running regular expression.\n"}, "fullDescription": {"text": "RegExp() called with a variable, this might allow an attacker to DOS your application with a long-running regular expression.\n"}, "helpUri": "https://betterscan.io", "help": {"markdown": "RegExp() called with a variable, this might allow an attacker to DOS your application with a long-running regular expression.\n", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "21", "name": "BetterscanRule", "shortDescription": {"text": "Detected eval(variable), which could allow a malicious actor to run arbitrary code.\n"}, "fullDescription": {"text": "Detected eval(variable), which could allow a malicious actor to run arbitrary code.\n"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Detected eval(variable), which could allow a malicious actor to run arbitrary code.\n", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "22", "name": "BetterscanRule", "shortDescription": {"text": "Detected the use of require(variable). Calling require with a non-literal argument might\nallow an attacker to load an run arbitrary code, or access arbitrary files.\n"}, "fullDescription": {"text": "Detected the use of require(variable). Calling require with a non-literal argument might\nallow an attacker to load an run arbitrary code, or access arbitrary files.\n"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Detected the use of require(variable). Calling require with a non-literal argument might\nallow an attacker to load an run arbitrary code, or access arbitrary files.\n", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "23", "name": "BetterscanRule", "shortDescription": {"text": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution."}, "fullDescription": {"text": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution."}, "helpUri": "https://betterscan.io", "help": {"markdown": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "24", "name": "BetterscanRule", "shortDescription": {"text": "Unnecessary import from the current package 'org.owasp.webgoat.lessons.missingac.MissingFunctionAC'"}, "fullDescription": {"text": "Unnecessary import from the current package 'org.owasp.webgoat.lessons.missingac.MissingFunctionAC'"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Unnecessary import from the current package 'org.owasp.webgoat.lessons.missingac.MissingFunctionAC'", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "25", "name": "BetterscanRule", "shortDescription": {"text": "Use equals() to compare strings instead of '==' or '!='"}, "fullDescription": {"text": "Use equals() to compare strings instead of '==' or '!='"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Use equals() to compare strings instead of '==' or '!='", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "26", "name": "BetterscanRule", "shortDescription": {"text": "Unnecessary modifier 'public' on method 'getId': the method is declared in an interface type"}, "fullDescription": {"text": "Unnecessary modifier 'public' on method 'getId': the method is declared in an interface type"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Unnecessary modifier 'public' on method 'getId': the method is declared in an interface type", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "27", "name": "BetterscanRule", "shortDescription": {"text": "Unnecessary import from the current package 'org.owasp.webgoat.lessons.xss.CrossSiteScripting'"}, "fullDescription": {"text": "Unnecessary import from the current package 'org.owasp.webgoat.lessons.xss.CrossSiteScripting'"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Unnecessary import from the current package 'org.owasp.webgoat.lessons.xss.CrossSiteScripting'", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "28", "name": "BetterscanRule", "shortDescription": {"text": "Unnecessary import from the current package 'org.owasp.webgoat.lessons.missingac.User'"}, "fullDescription": {"text": "Unnecessary import from the current package 'org.owasp.webgoat.lessons.missingac.User'"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Unnecessary import from the current package 'org.owasp.webgoat.lessons.missingac.User'", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "29", "name": "BetterscanRule", "shortDescription": {"text": "Avoid empty if statements"}, "fullDescription": {"text": "Avoid empty if statements"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Avoid empty if statements", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "30", "name": "BetterscanRule", "shortDescription": {"text": "The local variable name 'answer_pwd' doesn't match '[a-z][a-zA-Z0-9]*'"}, "fullDescription": {"text": "The local variable name 'answer_pwd' doesn't match '[a-z][a-zA-Z0-9]*'"}, "helpUri": "https://betterscan.io", "help": {"markdown": "The local variable name 'answer_pwd' doesn't match '[a-z][a-zA-Z0-9]*'", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "31", "name": "BetterscanRule", "shortDescription": {"text": "'catch' branch identical to 'InvalidClassException' branch"}, "fullDescription": {"text": "'catch' branch identical to 'InvalidClassException' branch"}, "helpUri": "https://betterscan.io", "help": {"markdown": "'catch' branch identical to 'InvalidClassException' branch", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "32", "name": "BetterscanRule", "shortDescription": {"text": "Unused import 'org.hamcrest.Matchers.hasSize'"}, "fullDescription": {"text": "Unused import 'org.hamcrest.Matchers.hasSize'"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Unused import 'org.hamcrest.Matchers.hasSize'", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "33", "name": "BetterscanRule", "shortDescription": {"text": "When doing a String.toLowerCase()/toUpperCase() call, use a Locale"}, "fullDescription": {"text": "When doing a String.toLowerCase()/toUpperCase() call, use a Locale"}, "helpUri": "https://betterscan.io", "help": {"markdown": "When doing a String.toLowerCase()/toUpperCase() call, use a Locale", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "34", "name": "BetterscanRule", "shortDescription": {"text": "Avoid empty catch blocks"}, "fullDescription": {"text": "Avoid empty catch blocks"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Avoid empty catch blocks", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "35", "name": "BetterscanRule", "shortDescription": {"text": "A class which only has private constructors should be final"}, "fullDescription": {"text": "A class which only has private constructors should be final"}, "helpUri": "https://betterscan.io", "help": {"markdown": "A class which only has private constructors should be final", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "36", "name": "BetterscanRule", "shortDescription": {"text": "Unused import 'org.springframework.core.io.support.ResourcePatternResolver'"}, "fullDescription": {"text": "Unused import 'org.springframework.core.io.support.ResourcePatternResolver'"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Unused import 'org.springframework.core.io.support.ResourcePatternResolver'", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "37", "name": "BetterscanRule", "shortDescription": {"text": "Unnecessary import from the current package 'org.owasp.webgoat.lessons.passwordreset.PasswordReset'"}, "fullDescription": {"text": "Unnecessary import from the current package 'org.owasp.webgoat.lessons.passwordreset.PasswordReset'"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Unnecessary import from the current package 'org.owasp.webgoat.lessons.passwordreset.PasswordReset'", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "38", "name": "BetterscanRule", "shortDescription": {"text": "Unused import 'org.owasp.webgoat.container.lessons.Initializeable'"}, "fullDescription": {"text": "Unused import 'org.owasp.webgoat.container.lessons.Initializeable'"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Unused import 'org.owasp.webgoat.container.lessons.Initializeable'", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "39", "name": "BetterscanRule", "shortDescription": {"text": "Unnecessary import from the current package 'org.owasp.webgoat.lessons.hijacksession.cas.Authentication'"}, "fullDescription": {"text": "Unnecessary import from the current package 'org.owasp.webgoat.lessons.hijacksession.cas.Authentication'"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Unnecessary import from the current package 'org.owasp.webgoat.lessons.hijacksession.cas.Authentication'", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "40", "name": "BetterscanRule", "shortDescription": {"text": "All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning."}, "fullDescription": {"text": "All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning."}, "helpUri": "https://betterscan.io", "help": {"markdown": "All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "41", "name": "BetterscanRule", "shortDescription": {"text": "Avoid using implementation types like 'TreeMap'; use the interface instead"}, "fullDescription": {"text": "Avoid using implementation types like 'TreeMap'; use the interface instead"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Avoid using implementation types like 'TreeMap'; use the interface instead", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "42", "name": "BetterscanRule", "shortDescription": {"text": "Unnecessary use of fully qualified name 'java.util.Map' due to existing import 'java.util.Map'"}, "fullDescription": {"text": "Unnecessary use of fully qualified name 'java.util.Map' due to existing import 'java.util.Map'"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Unnecessary use of fully qualified name 'java.util.Map' due to existing import 'java.util.Map'", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "43", "name": "BetterscanRule", "shortDescription": {"text": "Unnecessary use of fully qualified name 'WireMock.urlMatching' due to existing static import 'com.github.tomakehurst.wiremock.client.WireMock.urlMatching'"}, "fullDescription": {"text": "Unnecessary use of fully qualified name 'WireMock.urlMatching' due to existing static import 'com.github.tomakehurst.wiremock.client.WireMock.urlMatching'"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Unnecessary use of fully qualified name 'WireMock.urlMatching' due to existing static import 'com.github.tomakehurst.wiremock.client.WireMock.urlMatching'", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "44", "name": "BetterscanRule", "shortDescription": {"text": "Avoid unnecessary if..then..else statements when returning booleans"}, "fullDescription": {"text": "Avoid unnecessary if..then..else statements when returning booleans"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Avoid unnecessary if..then..else statements when returning booleans", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "45", "name": "BetterscanRule", "shortDescription": {"text": "Consider simply returning the value vs storing it in local variable 'link'"}, "fullDescription": {"text": "Consider simply returning the value vs storing it in local variable 'link'"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Consider simply returning the value vs storing it in local variable 'link'", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "46", "name": "BetterscanRule", "shortDescription": {"text": "The JUnit 5 test method name 'SmithIsMostEarningCompletesAssignment' doesn't match '[a-z][a-zA-Z0-9]*'"}, "fullDescription": {"text": "The JUnit 5 test method name 'SmithIsMostEarningCompletesAssignment' doesn't match '[a-z][a-zA-Z0-9]*'"}, "helpUri": "https://betterscan.io", "help": {"markdown": "The JUnit 5 test method name 'SmithIsMostEarningCompletesAssignment' doesn't match '[a-z][a-zA-Z0-9]*'", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "47", "name": "BetterscanRule", "shortDescription": {"text": "The method parameter name 'question_2_solution' doesn't match '[a-z][a-zA-Z0-9]*'"}, "fullDescription": {"text": "The method parameter name 'question_2_solution' doesn't match '[a-z][a-zA-Z0-9]*'"}, "helpUri": "https://betterscan.io", "help": {"markdown": "The method parameter name 'question_2_solution' doesn't match '[a-z][a-zA-Z0-9]*'", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "48", "name": "BetterscanRule", "shortDescription": {"text": "Unnecessary import from the current package 'org.owasp.webgoat.lessons.jwt.JWT'"}, "fullDescription": {"text": "Unnecessary import from the current package 'org.owasp.webgoat.lessons.jwt.JWT'"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Unnecessary import from the current package 'org.owasp.webgoat.lessons.jwt.JWT'", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "49", "name": "BetterscanRule", "shortDescription": {"text": "Avoid unused private fields such as 'mockMvc'."}, "fullDescription": {"text": "Avoid unused private fields such as 'mockMvc'."}, "helpUri": "https://betterscan.io", "help": {"markdown": "Avoid unused private fields such as 'mockMvc'.", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "50", "name": "BetterscanRule", "shortDescription": {"text": "Unnecessary import from the current package 'org.owasp.webgoat.lessons.jwt.JWTFinalEndpoint'"}, "fullDescription": {"text": "Unnecessary import from the current package 'org.owasp.webgoat.lessons.jwt.JWTFinalEndpoint'"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Unnecessary import from the current package 'org.owasp.webgoat.lessons.jwt.JWTFinalEndpoint'", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "51", "name": "BetterscanRule", "shortDescription": {"text": "Unnecessary import from the current package 'org.owasp.webgoat.lessons.challenges.SolutionConstants'"}, "fullDescription": {"text": "Unnecessary import from the current package 'org.owasp.webgoat.lessons.challenges.SolutionConstants'"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Unnecessary import from the current package 'org.owasp.webgoat.lessons.challenges.SolutionConstants'", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "52", "name": "BetterscanRule", "shortDescription": {"text": "The method parameter name 'answer_user' doesn't match '[a-z][a-zA-Z0-9]*'"}, "fullDescription": {"text": "The method parameter name 'answer_user' doesn't match '[a-z][a-zA-Z0-9]*'"}, "helpUri": "https://betterscan.io", "help": {"markdown": "The method parameter name 'answer_user' doesn't match '[a-z][a-zA-Z0-9]*'", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "53", "name": "BetterscanRule", "shortDescription": {"text": "Unused import 'org.jose4j.jwx.CompactSerializer.serialize'"}, "fullDescription": {"text": "Unused import 'org.jose4j.jwx.CompactSerializer.serialize'"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Unused import 'org.jose4j.jwx.CompactSerializer.serialize'", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "54", "name": "BetterscanRule", "shortDescription": {"text": "The method parameter name 'QTY' doesn't match '[a-z][a-zA-Z0-9]*'"}, "fullDescription": {"text": "The method parameter name 'QTY' doesn't match '[a-z][a-zA-Z0-9]*'"}, "helpUri": "https://betterscan.io", "help": {"markdown": "The method parameter name 'QTY' doesn't match '[a-z][a-zA-Z0-9]*'", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "55", "name": "BetterscanRule", "shortDescription": {"text": "Consider simply returning the value vs storing it in local variable 'localeResolver'"}, "fullDescription": {"text": "Consider simply returning the value vs storing it in local variable 'localeResolver'"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Consider simply returning the value vs storing it in local variable 'localeResolver'", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "56", "name": "BetterscanRule", "shortDescription": {"text": "The method parameter name 'question_4_solution' doesn't match '[a-z][a-zA-Z0-9]*'"}, "fullDescription": {"text": "The method parameter name 'question_4_solution' doesn't match '[a-z][a-zA-Z0-9]*'"}, "helpUri": "https://betterscan.io", "help": {"markdown": "The method parameter name 'question_4_solution' doesn't match '[a-z][a-zA-Z0-9]*'", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "57", "name": "BetterscanRule", "shortDescription": {"text": "Unused import 'com.google.common.collect.Lists'"}, "fullDescription": {"text": "Unused import 'com.google.common.collect.Lists'"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Unused import 'com.google.common.collect.Lists'", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "58", "name": "BetterscanRule", "shortDescription": {"text": "Unused import 'org.springframework.web.bind.annotation.*'"}, "fullDescription": {"text": "Unused import 'org.springframework.web.bind.annotation.*'"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Unused import 'org.springframework.web.bind.annotation.*'", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "59", "name": "BetterscanRule", "shortDescription": {"text": "Please use StandardCharsets constants"}, "fullDescription": {"text": "Please use StandardCharsets constants"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Please use StandardCharsets constants", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "60", "name": "BetterscanRule", "shortDescription": {"text": "Avoid unused local variables such as 'result'."}, "fullDescription": {"text": "Avoid unused local variables such as 'result'."}, "helpUri": "https://betterscan.io", "help": {"markdown": "Avoid unused local variables such as 'result'.", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "61", "name": "BetterscanRule", "shortDescription": {"text": "Perhaps 'decodeBuffer' could be replaced by a local variable."}, "fullDescription": {"text": "Perhaps 'decodeBuffer' could be replaced by a local variable."}, "helpUri": "https://betterscan.io", "help": {"markdown": "Perhaps 'decodeBuffer' could be replaced by a local variable.", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "62", "name": "BetterscanRule", "shortDescription": {"text": "Unnecessary use of fully qualified name 'ResultSet.CONCUR_UPDATABLE' due to existing static import 'java.sql.ResultSet.CONCUR_UPDATABLE'"}, "fullDescription": {"text": "Unnecessary use of fully qualified name 'ResultSet.CONCUR_UPDATABLE' due to existing static import 'java.sql.ResultSet.CONCUR_UPDATABLE'"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Unnecessary use of fully qualified name 'ResultSet.CONCUR_UPDATABLE' due to existing static import 'java.sql.ResultSet.CONCUR_UPDATABLE'", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "63", "name": "BetterscanRule", "shortDescription": {"text": "Ensure that resources like this FileOutputStream object are closed after use"}, "fullDescription": {"text": "Ensure that resources like this FileOutputStream object are closed after use"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Ensure that resources like this FileOutputStream object are closed after use", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "64", "name": "BetterscanRule", "shortDescription": {"text": "Unnecessary import from the current package 'org.owasp.webgoat.lessons.hijacksession.cas.HijackSessionAuthenticationProvider'"}, "fullDescription": {"text": "Unnecessary import from the current package 'org.owasp.webgoat.lessons.hijacksession.cas.HijackSessionAuthenticationProvider'"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Unnecessary import from the current package 'org.owasp.webgoat.lessons.hijacksession.cas.HijackSessionAuthenticationProvider'", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "65", "name": "BetterscanRule", "shortDescription": {"text": "The static method name 'II' doesn't match '[a-z][a-zA-Z0-9]*'"}, "fullDescription": {"text": "The static method name 'II' doesn't match '[a-z][a-zA-Z0-9]*'"}, "helpUri": "https://betterscan.io", "help": {"markdown": "The static method name 'II' doesn't match '[a-z][a-zA-Z0-9]*'", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "66", "name": "BetterscanRule", "shortDescription": {"text": "Do not hard code the IP address "}, "fullDescription": {"text": "Do not hard code the IP address "}, "helpUri": "https://betterscan.io", "help": {"markdown": "Do not hard code the IP address ", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "67", "name": "BetterscanRule", "shortDescription": {"text": "Consider simply returning the value vs storing it in local variable 'diagnostics'"}, "fullDescription": {"text": "Consider simply returning the value vs storing it in local variable 'diagnostics'"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Consider simply returning the value vs storing it in local variable 'diagnostics'", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "68", "name": "BetterscanRule", "shortDescription": {"text": "Ensure that resources like this PreparedStatement object are closed after use"}, "fullDescription": {"text": "Ensure that resources like this PreparedStatement object are closed after use"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Ensure that resources like this PreparedStatement object are closed after use", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "69", "name": "BetterscanRule", "shortDescription": {"text": "Unnecessary use of fully qualified name 'CompactSerializer.serialize' due to existing static import 'org.jose4j.jwx.CompactSerializer.serialize'"}, "fullDescription": {"text": "Unnecessary use of fully qualified name 'CompactSerializer.serialize' due to existing static import 'org.jose4j.jwx.CompactSerializer.serialize'"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Unnecessary use of fully qualified name 'CompactSerializer.serialize' due to existing static import 'org.jose4j.jwx.CompactSerializer.serialize'", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "70", "name": "BetterscanRule", "shortDescription": {"text": "Unused import 'lombok.*'"}, "fullDescription": {"text": "Unused import 'lombok.*'"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Unused import 'lombok.*'", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "71", "name": "BetterscanRule", "shortDescription": {"text": "The static method name 'GG' doesn't match '[a-z][a-zA-Z0-9]*'"}, "fullDescription": {"text": "The static method name 'GG' doesn't match '[a-z][a-zA-Z0-9]*'"}, "helpUri": "https://betterscan.io", "help": {"markdown": "The static method name 'GG' doesn't match '[a-z][a-zA-Z0-9]*'", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "72", "name": "BetterscanRule", "shortDescription": {"text": "Unnecessary modifier 'public' on method 'getEmail': the method is declared in an interface type"}, "fullDescription": {"text": "Unnecessary modifier 'public' on method 'getEmail': the method is declared in an interface type"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Unnecessary modifier 'public' on method 'getEmail': the method is declared in an interface type", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "73", "name": "BetterscanRule", "shortDescription": {"text": "The JUnit 5 test method name 'HiddenMenusFailure' doesn't match '[a-z][a-zA-Z0-9]*'"}, "fullDescription": {"text": "The JUnit 5 test method name 'HiddenMenusFailure' doesn't match '[a-z][a-zA-Z0-9]*'"}, "helpUri": "https://betterscan.io", "help": {"markdown": "The JUnit 5 test method name 'HiddenMenusFailure' doesn't match '[a-z][a-zA-Z0-9]*'", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "74", "name": "BetterscanRule", "shortDescription": {"text": "Ensure that resources like this ReadableByteChannel object are closed after use"}, "fullDescription": {"text": "Ensure that resources like this ReadableByteChannel object are closed after use"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Ensure that resources like this ReadableByteChannel object are closed after use", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "75", "name": "BetterscanRule", "shortDescription": {"text": "Unused import 'java.util.stream.Collectors.toList'"}, "fullDescription": {"text": "Unused import 'java.util.stream.Collectors.toList'"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Unused import 'java.util.stream.Collectors.toList'", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "76", "name": "BetterscanRule", "shortDescription": {"text": "Document empty constructor"}, "fullDescription": {"text": "Document empty constructor"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Document empty constructor", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "77", "name": "BetterscanRule", "shortDescription": {"text": "Unused import 'io.jsonwebtoken.*'"}, "fullDescription": {"text": "Unused import 'io.jsonwebtoken.*'"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Unused import 'io.jsonwebtoken.*'", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "78", "name": "BetterscanRule", "shortDescription": {"text": "Assertion may be simplified using assertTrue"}, "fullDescription": {"text": "Assertion may be simplified using assertTrue"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Assertion may be simplified using assertTrue", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "79", "name": "BetterscanRule", "shortDescription": {"text": "Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()"}, "fullDescription": {"text": "Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "80", "name": "BetterscanRule", "shortDescription": {"text": "Unused import 'org.springframework.web.servlet.i18n.SessionLocaleResolver'"}, "fullDescription": {"text": "Unused import 'org.springframework.web.servlet.i18n.SessionLocaleResolver'"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Unused import 'org.springframework.web.servlet.i18n.SessionLocaleResolver'", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "81", "name": "BetterscanRule", "shortDescription": {"text": "Return an empty collection rather than null."}, "fullDescription": {"text": "Return an empty collection rather than null."}, "helpUri": "https://betterscan.io", "help": {"markdown": "Return an empty collection rather than null.", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "82", "name": "BetterscanRule", "shortDescription": {"text": "Ensure that resources like this StandardJavaFileManager object are closed after use"}, "fullDescription": {"text": "Ensure that resources like this StandardJavaFileManager object are closed after use"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Ensure that resources like this StandardJavaFileManager object are closed after use", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "83", "name": "BetterscanRule", "shortDescription": {"text": "Avoid using a branching statement as the last in a loop."}, "fullDescription": {"text": "Avoid using a branching statement as the last in a loop."}, "helpUri": "https://betterscan.io", "help": {"markdown": "Avoid using a branching statement as the last in a loop.", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "84", "name": "BetterscanRule", "shortDescription": {"text": "Use one line for each declaration, it enhances code readability."}, "fullDescription": {"text": "Use one line for each declaration, it enhances code readability."}, "helpUri": "https://betterscan.io", "help": {"markdown": "Use one line for each declaration, it enhances code readability.", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "85", "name": "BetterscanRule", "shortDescription": {"text": "The local variable name 'NUMBER_OF_PARALLEL_THREADS' doesn't match '[a-z][a-zA-Z0-9]*'"}, "fullDescription": {"text": "The local variable name 'NUMBER_OF_PARALLEL_THREADS' doesn't match '[a-z][a-zA-Z0-9]*'"}, "helpUri": "https://betterscan.io", "help": {"markdown": "The local variable name 'NUMBER_OF_PARALLEL_THREADS' doesn't match '[a-z][a-zA-Z0-9]*'", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "86", "name": "BetterscanRule", "shortDescription": {"text": "The static method name 'HH' doesn't match '[a-z][a-zA-Z0-9]*'"}, "fullDescription": {"text": "The static method name 'HH' doesn't match '[a-z][a-zA-Z0-9]*'"}, "helpUri": "https://betterscan.io", "help": {"markdown": "The static method name 'HH' doesn't match '[a-z][a-zA-Z0-9]*'", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "87", "name": "BetterscanRule", "shortDescription": {"text": "Avoid unused local variables such as 'test'."}, "fullDescription": {"text": "Avoid unused local variables such as 'test'."}, "helpUri": "https://betterscan.io", "help": {"markdown": "Avoid unused local variables such as 'test'.", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "88", "name": "BetterscanRule", "shortDescription": {"text": "The method parameter name 'DOMTestRoute' doesn't match '[a-z][a-zA-Z0-9]*'"}, "fullDescription": {"text": "The method parameter name 'DOMTestRoute' doesn't match '[a-z][a-zA-Z0-9]*'"}, "helpUri": "https://betterscan.io", "help": {"markdown": "The method parameter name 'DOMTestRoute' doesn't match '[a-z][a-zA-Z0-9]*'", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "89", "name": "BetterscanRule", "shortDescription": {"text": "Avoid unused private fields such as 'id'."}, "fullDescription": {"text": "Avoid unused private fields such as 'id'."}, "helpUri": "https://betterscan.io", "help": {"markdown": "Avoid unused private fields such as 'id'.", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "90", "name": "BetterscanRule", "shortDescription": {"text": "Avoid unused local variables such as 'jwt'."}, "fullDescription": {"text": "Avoid unused local variables such as 'jwt'."}, "helpUri": "https://betterscan.io", "help": {"markdown": "Avoid unused local variables such as 'jwt'.", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "91", "name": "BetterscanRule", "shortDescription": {"text": "Position literals first in String comparisons"}, "fullDescription": {"text": "Position literals first in String comparisons"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Position literals first in String comparisons", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "92", "name": "BetterscanRule", "shortDescription": {"text": "The static method name 'FF' doesn't match '[a-z][a-zA-Z0-9]*'"}, "fullDescription": {"text": "The static method name 'FF' doesn't match '[a-z][a-zA-Z0-9]*'"}, "helpUri": "https://betterscan.io", "help": {"markdown": "The static method name 'FF' doesn't match '[a-z][a-zA-Z0-9]*'", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "93", "name": "BetterscanRule", "shortDescription": {"text": "Ensure that HEALTHCHECK instructions have been added to container images"}, "fullDescription": {"text": "Ensure that HEALTHCHECK instructions have been added to container images"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Ensure that HEALTHCHECK instructions have been added to container images", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "94", "name": "BetterscanRule", "shortDescription": {"text": "Private Key"}, "fullDescription": {"text": "Private Key"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Private Key", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}]}}, "results": [{"ruleId": "0", "message": {"text": "Highentropy"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "config/dependency-check/project-suppression.xml"}, "region": {"startLine": 77}}}]}, {"ruleId": "1", "message": {"text": "GenericAPIKey"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": ".github/workflows/build.yml"}, "region": {"startLine": 72}}}]}, {"ruleId": "2", "message": {"text": "User controlled data in eval() or similar functions may result in Server Side Injection or Remote Code Injection"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/resources/webgoat/static/js/jquery/jquery-1.10.2.min.js"}, "region": {"startLine": 4}}}]}, {"ruleId": "3", "message": {"text": "Error messages with stack traces may expose sensitive information about the application."}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/resources/webgoat/static/js/libs/ace.js"}, "region": {"startLine": 55}}}]}, {"ruleId": "4", "message": {"text": "String comparisons using '===', '!==', '!=' and '==' is vulnerable to timing attacks. More info: https://snyk.io/blog/node-js-timing-attack-ccc-ctf/"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/resources/webgoat/static/js/libs/ace.js"}, "region": {"startLine": 9837}}}]}, {"ruleId": "5", "message": {"text": "The use of a predictable random value can lead to vulnerabilities when\nused in certain security critical contexts. A quick fix could be to replace\nthe use of java.util.Random with something stronger, such as java.security.SecureRandom.\n"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/lessons/hijacksession/cas/HijackSessionAuthenticationProvider.java"}, "region": {"startLine": 51}}}]}, {"ruleId": "6", "message": {"text": "DES is considered strong ciphers for modern applications. Currently, NIST recommends the usage\nof AES block ciphers instead of DES.\n"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"}, "region": {"startLine": 56}}}]}, {"ruleId": "7", "message": {"text": "Cryptographic keys should not be kept in the source code. The source code can be widely shared\nin an enterprise environment, and is certainly shared in open source. To be managed safely,\npasswords and secret keys should be stored in separate configuration files or keystores.\n"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/it/java/org/owasp/webgoat/CSRFIntegrationTest.java"}, "region": {"startLine": 46}}}]}, {"ruleId": "8", "message": {"text": "A trust boundary can be thought of as line drawn through a program. On one side\nof the line, data is untrusted. On the other side of the line, data is assumed\nto be trustworthy. The purpose of validation logic is to allow data to safely\ncross the trust boundary - to move from untrusted to trusted. A trust boundary\nviolation occurs when a program blurs the line between what is trusted and what\nis untrusted. By combining trusted and untrusted data in the same data\nstructure, it becomes easier for programmers to mistakenly trust unvalidated\ndata.\n"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java"}, "region": {"startLine": 54}}}]}, {"ruleId": "9", "message": {"text": "Cryptographic keys should not be kept in the source code. The source code can be widely shared\nin an enterprise environment, and is certainly shared in open source. To be managed safely,\npasswords and secret keys should be stored in separate configuration files or keystores.\n"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/CryptoUtil.java"}, "region": {"startLine": 130}}}]}, {"ruleId": "10", "message": {"text": "Cryptographic keys should not be kept in the source code. The source code can be widely shared\nin an enterprise environment, and is certainly shared in open source. To be managed safely,\npasswords and secret keys should be stored in separate configuration files or keystores.\n"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"}, "region": {"startLine": 89}}}]}, {"ruleId": "11", "message": {"text": "The method identified is susceptible to injection. The input should be validated and properly\nescaped.\n"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/container/users/UserService.java"}, "region": {"startLine": 52}}}]}, {"ruleId": "12", "message": {"text": "\"The software uses an HTTP request parameter to construct a pathname that should be within a\nrestricted directory, but it does not properly neutralize absolute path sequences such as\n\"/abs/path\" that can resolve to a location that is outside of that directory. See\nhttp://cwe.mitre.org/data/definitions/36.html for more information.\"\n"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"}, "region": {"startLine": 86}}}]}, {"ruleId": "13", "message": {"text": "Server-Side Request Forgery occur when a web server executes a request to a\nuser supplied destination parameter that is not validated. Such vulnerabilities\ncould allow an attacker to access internal services or to launch attacks from\nyour web server.\n"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask2.java"}, "region": {"startLine": 53}}}]}, {"ruleId": "14", "message": {"text": "Passwords should not be kept in the source code. The source code can be widely shared in an\nenterprise environment, and is certainly shared in open source. To be managed safely, passwords\nand secret keys should be stored in separate configuration files or keystores.\n"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": ".mvn/wrapper/MavenWrapperDownloader.java"}, "region": {"startLine": 100}}}]}, {"ruleId": "15", "message": {"text": "\"Storing sensitive data in a persistent cookie for an extended period can lead to a breach of\nconfidentiality or account compromise.\"\n"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"}, "region": {"startLine": 105}}}]}, {"ruleId": "16", "message": {"text": "The Servlet can read GET and POST parameters from various methods. The value obtained should be\nconsidered unsafe. You may need to validate or sanitize those values before passing them to\nsensitive APIs\n"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/lessons/authbypass/VerifyAccount.java"}, "region": {"startLine": 85}}}]}, {"ruleId": "17", "message": {"text": "Cryptographic keys should not be kept in the source code. The source code can be widely shared\nin an enterprise environment, and is certainly shared in open source. To be managed safely,\npasswords and secret keys should be stored in separate configuration files or keystores.\n"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/container/service/LabelDebugService.java"}, "region": {"startLine": 57}}}]}, {"ruleId": "18", "message": {"text": "The sensitive information may be valuable information on its own (such as a password), or it\nmay be useful for launching other, more deadly attacks. If an attack fails, an attacker may use\nerror information provided by the server to launch another more focused attack. For example, an\nattempt to exploit a path traversal weakness (CWE-22) might yield the full pathname of the\ninstalled application.\n"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": ".mvn/wrapper/MavenWrapperDownloader.java"}, "region": {"startLine": 90}}}]}, {"ruleId": "19", "message": {"text": "The method identified is susceptible to injection. The input should be validated and properly\nescaped.\n"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"}, "region": {"startLine": 58}}}]}, {"ruleId": "20", "message": {"text": "RegExp() called with a variable, this might allow an attacker to DOS your application with a long-running regular expression.\n"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/resources/webgoat/static/js/libs/ace.js"}, "region": {"startLine": 4491}}}]}, {"ruleId": "21", "message": {"text": "Detected eval(variable), which could allow a malicious actor to run arbitrary code.\n"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/resources/webgoat/static/js/libs/require.min.js"}, "region": {"startLine": 5}}}]}, {"ruleId": "22", "message": {"text": "Detected the use of require(variable). Calling require with a non-literal argument might\nallow an attacker to load an run arbitrary code, or access arbitrary files.\n"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/resources/webgoat/static/js/libs/ace.js"}, "region": {"startLine": 4521}}}]}, {"ruleId": "23", "message": {"text": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution."}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/resources/lessons/challenges/js/bootstrap.min.js"}, "region": {"startLine": 6}}}]}, {"ruleId": "24", "message": {"text": "Unnecessary import from the current package 'org.owasp.webgoat.lessons.missingac.MissingFunctionAC'"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/test/java/org/owasp/webgoat/lessons/missingac/MissingFunctionACUsersTest.java"}, "region": {"startLine": 29}}}]}, {"ruleId": "25", "message": {"text": "Use equals() to compare strings instead of '==' or '!='"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/lessons/csrf/ForgedReviews.java"}, "region": {"startLine": 102}}}]}, {"ruleId": "26", "message": {"text": "Unnecessary modifier 'public' on method 'getId': the method is declared in an interface type"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/lessons/vulnerablecomponents/Contact.java"}, "region": {"startLine": 27}}}]}, {"ruleId": "27", "message": {"text": "Unnecessary import from the current package 'org.owasp.webgoat.lessons.xss.CrossSiteScripting'"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/test/java/org/owasp/webgoat/lessons/xss/DOMCrossSiteScriptingTest.java"}, "region": {"startLine": 31}}}]}, {"ruleId": "28", "message": {"text": "Unnecessary import from the current package 'org.owasp.webgoat.lessons.missingac.User'"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/test/java/org/owasp/webgoat/lessons/missingac/DisplayUserTest.java"}, "region": {"startLine": 30}}}]}, {"ruleId": "29", "message": {"text": "Avoid empty if statements"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/lessons/idor/UserProfile.java"}, "region": {"startLine": 62}}}]}, {"ruleId": "30", "message": {"text": "The local variable name 'answer_pwd' doesn't match '[a-z][a-zA-Z0-9]*'"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/it/java/org/owasp/webgoat/CryptoIntegrationTest.java"}, "region": {"startLine": 60}}}]}, {"ruleId": "31", "message": {"text": "'catch' branch identical to 'InvalidClassException' branch"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/lessons/deserialization/InsecureDeserializationTask.java"}, "region": {"startLine": 68}}}]}, {"ruleId": "32", "message": {"text": "Unused import 'org.hamcrest.Matchers.hasSize'"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/test/java/org/owasp/webgoat/lessons/missingac/MissingFunctionACUsersTest.java"}, "region": {"startLine": 34}}}]}, {"ruleId": "33", "message": {"text": "When doing a String.toLowerCase()/toUpperCase() call, use a Locale"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/it/java/org/owasp/webgoat/DeserializationIntegrationTest.java"}, "region": {"startLine": 13}}}]}, {"ruleId": "34", "message": {"text": "Avoid empty catch blocks"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": ".mvn/wrapper/MavenWrapperDownloader.java"}, "region": {"startLine": 71}}}]}, {"ruleId": "35", "message": {"text": "A class which only has private constructors should be final"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTFinalEndpoint.java"}, "region": {"startLine": 63}}}]}, {"ruleId": "36", "message": {"text": "Unused import 'org.springframework.core.io.support.ResourcePatternResolver'"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/test/java/org/owasp/webgoat/container/assignments/AssignmentEndpointTest.java"}, "region": {"startLine": 37}}}]}, {"ruleId": "37", "message": {"text": "Unnecessary import from the current package 'org.owasp.webgoat.lessons.passwordreset.PasswordReset'"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/test/java/org/owasp/webgoat/lessons/passwordreset/SecurityQuestionAssignmentTest.java"}, "region": {"startLine": 8}}}]}, {"ruleId": "38", "message": {"text": "Unused import 'org.owasp.webgoat.container.lessons.Initializeable'"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/test/java/org/owasp/webgoat/container/users/UserServiceTest.java"}, "region": {"startLine": 9}}}]}, {"ruleId": "39", "message": {"text": "Unnecessary import from the current package 'org.owasp.webgoat.lessons.hijacksession.cas.Authentication'"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/test/java/org/owasp/webgoat/lessons/hijacksession/cas/HijackSessionAuthenticationProviderTest.java"}, "region": {"startLine": 38}}}]}, {"ruleId": "40", "message": {"text": "All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning."}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": ".mvn/wrapper/MavenWrapperDownloader.java"}, "region": {"startLine": 21}}}]}, {"ruleId": "41", "message": {"text": "Avoid using implementation types like 'TreeMap'; use the interface instead"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/webwolf/jwt/JWTToken.java"}, "region": {"startLine": 50}}}]}, {"ruleId": "42", "message": {"text": "Unnecessary use of fully qualified name 'java.util.Map' due to existing import 'java.util.Map'"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/lessons/clientsidefiltering/Salaries.java"}, "region": {"startLine": 81}}}]}, {"ruleId": "43", "message": {"text": "Unnecessary use of fully qualified name 'WireMock.urlMatching' due to existing static import 'com.github.tomakehurst.wiremock.client.WireMock.urlMatching'"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/test/java/org/owasp/webgoat/lessons/xxe/BlindSendFileAssignmentTest.java"}, "region": {"startLine": 95}}}]}, {"ruleId": "44", "message": {"text": "Avoid unnecessary if..then..else statements when returning booleans"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/lessons/authbypass/AccountVerificationHelper.java"}, "region": {"startLine": 79}}}]}, {"ruleId": "45", "message": {"text": "Consider simply returning the value vs storing it in local variable 'link'"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/it/java/org/owasp/webgoat/PasswordResetLessonIntegrationTest.java"}, "region": {"startLine": 104}}}]}, {"ruleId": "46", "message": {"text": "The JUnit 5 test method name 'SmithIsMostEarningCompletesAssignment' doesn't match '[a-z][a-zA-Z0-9]*'"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/test/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9Test.java"}, "region": {"startLine": 169}}}]}, {"ruleId": "47", "message": {"text": "The method parameter name 'question_2_solution' doesn't match '[a-z][a-zA-Z0-9]*'"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/lessons/cia/CIAQuiz.java"}, "region": {"startLine": 19}}}]}, {"ruleId": "48", "message": {"text": "Unnecessary import from the current package 'org.owasp.webgoat.lessons.jwt.JWT'"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTDecodeEndpointTest.java"}, "region": {"startLine": 7}}}]}, {"ruleId": "49", "message": {"text": "Avoid unused private fields such as 'mockMvc'."}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/test/java/org/owasp/webgoat/lessons/authbypass/BypassVerificationTest.java"}, "region": {"startLine": 41}}}]}, {"ruleId": "50", "message": {"text": "Unnecessary import from the current package 'org.owasp.webgoat.lessons.jwt.JWTFinalEndpoint'"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTFinalEndpointTest.java"}, "region": {"startLine": 10}}}]}, {"ruleId": "51", "message": {"text": "Unnecessary import from the current package 'org.owasp.webgoat.lessons.challenges.SolutionConstants'"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/test/java/org/owasp/webgoat/lessons/challenges/Assignment1Test.java"}, "region": {"startLine": 32}}}]}, {"ruleId": "52", "message": {"text": "The method parameter name 'answer_user' doesn't match '[a-z][a-zA-Z0-9]*'"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java"}, "region": {"startLine": 61}}}]}, {"ruleId": "53", "message": {"text": "Unused import 'org.jose4j.jwx.CompactSerializer.serialize'"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/webwolf/jwt/JWTToken.java"}, "region": {"startLine": 22}}}]}, {"ruleId": "54", "message": {"text": "The method parameter name 'QTY' doesn't match '[a-z][a-zA-Z0-9]*'"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/lessons/htmltampering/HtmlTamperingTask.java"}, "region": {"startLine": 39}}}]}, {"ruleId": "55", "message": {"text": "Consider simply returning the value vs storing it in local variable 'localeResolver'"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/container/MvcConfiguration.java"}, "region": {"startLine": 204}}}]}, {"ruleId": "56", "message": {"text": "The method parameter name 'question_4_solution' doesn't match '[a-z][a-zA-Z0-9]*'"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionQuiz.java"}, "region": {"startLine": 49}}}]}, {"ruleId": "57", "message": {"text": "Unused import 'com.google.common.collect.Lists'"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/webwolf/requests/WebWolfTraceRepository.java"}, "region": {"startLine": 26}}}]}, {"ruleId": "58", "message": {"text": "Unused import 'org.springframework.web.bind.annotation.*'"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/lessons/insecurelogin/InsecureLoginTask.java"}, "region": {"startLine": 28}}}]}, {"ruleId": "59", "message": {"text": "Please use StandardCharsets constants"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/it/java/org/owasp/webgoat/CryptoIntegrationTest.java"}, "region": {"startLine": 125}}}]}, {"ruleId": "60", "message": {"text": "Avoid unused local variables such as 'result'."}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlInjectionLesson10b.java"}, "region": {"startLine": 101}}}]}, {"ruleId": "61", "message": {"text": "Perhaps 'decodeBuffer' could be replaced by a local variable."}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/MD5.java"}, "region": {"startLine": 423}}}]}, {"ruleId": "62", "message": {"text": "Unnecessary use of fully qualified name 'ResultSet.CONCUR_UPDATABLE' due to existing static import 'java.sql.ResultSet.CONCUR_UPDATABLE'"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"}, "region": {"startLine": 64}}}]}, {"ruleId": "63", "message": {"text": "Ensure that resources like this FileOutputStream object are closed after use"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": ".mvn/wrapper/MavenWrapperDownloader.java"}, "region": {"startLine": 111}}}]}, {"ruleId": "64", "message": {"text": "Unnecessary import from the current package 'org.owasp.webgoat.lessons.hijacksession.cas.HijackSessionAuthenticationProvider'"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/test/java/org/owasp/webgoat/lessons/hijacksession/cas/HijackSessionAuthenticationProviderTest.java"}, "region": {"startLine": 40}}}]}, {"ruleId": "65", "message": {"text": "The static method name 'II' doesn't match '[a-z][a-zA-Z0-9]*'"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/MD5.java"}, "region": {"startLine": 560}}}]}, {"ruleId": "66", "message": {"text": "Do not hard code the IP address "}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/it/java/org/owasp/webgoat/SqlInjectionMitigationIntegrationTest.java"}, "region": {"startLine": 65}}}]}, {"ruleId": "67", "message": {"text": "Consider simply returning the value vs storing it in local variable 'diagnostics'"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlInjectionLesson10b.java"}, "region": {"startLine": 103}}}]}, {"ruleId": "68", "message": {"text": "Ensure that resources like this PreparedStatement object are closed after use"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"}, "region": {"startLine": 59}}}]}, {"ruleId": "69", "message": {"text": "Unnecessary use of fully qualified name 'CompactSerializer.serialize' due to existing static import 'org.jose4j.jwx.CompactSerializer.serialize'"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/webwolf/jwt/JWTToken.java"}, "region": {"startLine": 83}}}]}, {"ruleId": "70", "message": {"text": "Unused import 'lombok.*'"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/container/lessons/Assignment.java"}, "region": {"startLine": 3}}}]}, {"ruleId": "71", "message": {"text": "The static method name 'GG' doesn't match '[a-z][a-zA-Z0-9]*'"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/MD5.java"}, "region": {"startLine": 542}}}]}, {"ruleId": "72", "message": {"text": "Unnecessary modifier 'public' on method 'getEmail': the method is declared in an interface type"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/lessons/vulnerablecomponents/Contact.java"}, "region": {"startLine": 33}}}]}, {"ruleId": "73", "message": {"text": "The JUnit 5 test method name 'HiddenMenusFailure' doesn't match '[a-z][a-zA-Z0-9]*'"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/test/java/org/owasp/webgoat/lessons/missingac/MissingFunctionACHiddenMenusTest.java"}, "region": {"startLine": 69}}}]}, {"ruleId": "74", "message": {"text": "Ensure that resources like this ReadableByteChannel object are closed after use"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": ".mvn/wrapper/MavenWrapperDownloader.java"}, "region": {"startLine": 109}}}]}, {"ruleId": "75", "message": {"text": "Unused import 'java.util.stream.Collectors.toList'"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/container/lessons/CourseConfiguration.java"}, "region": {"startLine": 44}}}]}, {"ruleId": "76", "message": {"text": "Document empty constructor"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/container/session/UserSessionData.java"}, "region": {"startLine": 12}}}]}, {"ruleId": "77", "message": {"text": "Unused import 'io.jsonwebtoken.*'"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTFinalEndpoint.java"}, "region": {"startLine": 25}}}]}, {"ruleId": "78", "message": {"text": "Assertion may be simplified using assertTrue"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/it/java/org/owasp/webgoat/CSRFIntegrationTest.java"}, "region": {"startLine": 152}}}]}, {"ruleId": "79", "message": {"text": "Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlInjectionLesson10b.java"}, "region": {"startLine": 78}}}]}, {"ruleId": "80", "message": {"text": "Unused import 'org.springframework.web.servlet.i18n.SessionLocaleResolver'"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/container/WebSecurityConfig.java"}, "region": {"startLine": 47}}}]}, {"ruleId": "81", "message": {"text": "Return an empty collection rather than null."}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTFinalEndpoint.java"}, "region": {"startLine": 91}}}]}, {"ruleId": "82", "message": {"text": "Ensure that resources like this StandardJavaFileManager object are closed after use"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlInjectionLesson10b.java"}, "region": {"startLine": 97}}}]}, {"ruleId": "83", "message": {"text": "Avoid using a branching statement as the last in a loop."}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/it/java/org/owasp/webgoat/JWTLessonIntegrationTest.java"}, "region": {"startLine": 74}}}]}, {"ruleId": "84", "message": {"text": "Use one line for each declaration, it enhances code readability."}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/MD5.java"}, "region": {"startLine": 584}}}]}, {"ruleId": "85", "message": {"text": "The local variable name 'NUMBER_OF_PARALLEL_THREADS' doesn't match '[a-z][a-zA-Z0-9]*'"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/it/java/org/owasp/webgoat/ProgressRaceConditionIntegrationTest.java"}, "region": {"startLine": 23}}}]}, {"ruleId": "86", "message": {"text": "The static method name 'HH' doesn't match '[a-z][a-zA-Z0-9]*'"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/MD5.java"}, "region": {"startLine": 551}}}]}, {"ruleId": "87", "message": {"text": "Avoid unused local variables such as 'test'."}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"}, "region": {"startLine": 67}}}]}, {"ruleId": "88", "message": {"text": "The method parameter name 'DOMTestRoute' doesn't match '[a-z][a-zA-Z0-9]*'"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingLesson6a.java"}, "region": {"startLine": 45}}}]}, {"ruleId": "89", "message": {"text": "Avoid unused private fields such as 'id'."}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/container/users/LessonTracker.java"}, "region": {"startLine": 48}}}]}, {"ruleId": "90", "message": {"text": "Avoid unused local variables such as 'jwt'."}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/it/java/org/owasp/webgoat/JWTLessonIntegrationTest.java"}, "region": {"startLine": 70}}}]}, {"ruleId": "91", "message": {"text": "Position literals first in String comparisons"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/container/AsciiDoctorTemplateResolver.java"}, "region": {"startLine": 112}}}]}, {"ruleId": "92", "message": {"text": "The static method name 'FF' doesn't match '[a-z][a-zA-Z0-9]*'"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/MD5.java"}, "region": {"startLine": 533}}}]}, {"ruleId": "93", "message": {"text": "Ensure that HEALTHCHECK instructions have been added to container images"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "Dockerfile"}, "region": {"startLine": 1}}}]}, {"ruleId": "94", "message": {"text": "Private Key"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/CryptoUtil.java"}, "region": {"startLine": 42}}}]}]}]}